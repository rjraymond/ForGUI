{"ast":null,"code":"var _jsxFileName = \"/home/ryan/Git/ForGUI/src/Application.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { GetModelList } from \"./GetModelList.js\";\nimport { GetPrediction } from \"./GetPrediction.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.Submit = event => {\n      event.preventDefault(); /*\tMust be *first* to prevent automatic refresh\t*/\n\n      var sample = document.getElementById(\"sample\").files[0];\n      var post = new XMLHttpRequest();\n      var data = new FormData();\n      if (sample == null) {\n        console.log(\"No sample uploaded!\");\n        return;\n      }\n      this.setState({\n        prediction_in_progress: true\n      }); /* Start our spinner */\n\n      data.append(\"sample\", document.getElementById(\"sample\").files[0]);\n      post.open(\"POST\", \"http://localhost:8000/GetPrediction.php\", true);\n      post.onload = e => {\n        this.setState({\n          prediction_in_progress: false\n        });\n      };\n      post.send(data);\n    };\n    this.state = {};\n    this.state.models = GetModelList();\n    this.state.model = this.state.models[0];\n    this.state.prediction_in_progress = false;\n    this.state.prediction = -1;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.Submit,\n        style: {\n          margin: \"auto\",\n          width: \"max-content\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"UploadSample\",\n            children: \" Upload Sample: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"sample\",\n            name: \"sample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"SelectModel\",\n            children: \" Select Model: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"SelectModel\",\n            onChange: this.ModelChanged,\n            children: this.state.models.sort().map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: name,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Analyze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"auto\",\n          width: \"max-content\"\n        },\n        children: [this.state.model == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Please select a model \"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false), this.state.prediction_in_progress ? /*#__PURE__*/_jsxDEV(LoadingAnimation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 6\n        }, this) : this.state.prediction >= 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" We estimate a \", this.state.prediction, \"% chance that \", this.state.sample.name, \" is a deepfake. \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass LoadingAnimation extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"LoadingAnimation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this);\n  }\n}","map":{"version":3,"names":["React","ReactDOM","GetModelList","GetPrediction","Application","Component","constructor","props","Submit","event","preventDefault","sample","document","getElementById","files","post","XMLHttpRequest","data","FormData","console","log","setState","prediction_in_progress","append","open","onload","e","send","state","models","model","prediction","render","margin","width","ModelChanged","sort","map","name","index","LoadingAnimation"],"sources":["/home/ryan/Git/ForGUI/src/Application.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { GetModelList } from \"./GetModelList.js\";\nimport { GetPrediction } from \"./GetPrediction.js\";\n\nexport class Application extends React.Component {\n  constructor (props)\n\t{\n\t\tsuper (props);\n\t\tthis.state = {}\n\t\tthis.state.models = GetModelList ();\n\t\tthis.state.model = this.state.models[0];\n\t\tthis.state.prediction_in_progress = false;\n\t\tthis.state.prediction = -1;\n\t}\n\t\n\tSubmit = (event) => \n\t{\n\t\tevent.preventDefault ();\t/*\tMust be *first* to prevent automatic refresh\t*/\n\t\t\n\t\tvar sample = document.getElementById (\"sample\").files[0];\n\t\tvar post = new XMLHttpRequest ();\n    var data = new FormData ();\n\n\t\tif (sample == null) {\n\t\t\tconsole.log (\"No sample uploaded!\");\n\t\t\treturn; }\n\t\t\n\t\tthis.setState ({prediction_in_progress: true});\t/* Start our spinner */\n\t\t\n\t\tdata.append (\"sample\", document.getElementById (\"sample\").files[0]);\n\t\tpost.open (\"POST\", \"http://localhost:8000/GetPrediction.php\", true);\n\t\tpost.onload = (e) => {\n\t\t\tthis.setState ({prediction_in_progress: false})\n\t\t}\n\t\tpost.send (data);\n\t}\n\trender () {\n    return (\n      <div>\n\t\t\t\t<form onSubmit = {this.Submit} style = {{margin: \"auto\", width: \"max-content\"}}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor = \"UploadSample\"> Upload Sample: </label>\n\t\t\t\t\t\t<input type = \"file\" id = \"sample\" name = \"sample\"/>\n\t\t\t\t\t</div><>\n\t\t\t\t\t<label htmlFor = \"SelectModel\"> Select Model: </label>\n      \t\t<select id = \"SelectModel\" onChange = {this.ModelChanged}>\n      \t\t\t{this.state.models.sort ().map ((name, index) => (\n        \t\t\t<option value = {name} key = {index}>\n          \t{name}\n        \t\t</option>\n      \t\t\t))}\n      \t\t</select></>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type = \"submit\" value = \"Analyze\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div style = {{margin: \"auto\", width: \"max-content\"}}>\n\t\t\t\t{ this.state.model == null ?\n\t\t\t\t\t<> Please select a model </> :\n\t\t\t\t\t<> </> }\n\t\t\t\t{\n\t\t\t\tthis.state.prediction_in_progress ?\n\t\t\t\t\t<LoadingAnimation /> :\n\t\t\t\t\t(this.state.prediction >= 0 ?\n\t\t\t\t\t\t<> We estimate a {this.state.prediction}% chance that {this.state.sample.name} is a deepfake. </> :\n\t\t\t\t\t\t<> </>)\n\t\t\t\t}\n\t\t\t\t</div>\n      </div>\n    );\n  }\n}\n\nclass LoadingAnimation extends React.Component {\n\trender () {\n\t\treturn (\n\t\t\t<span className = \"LoadingAnimation\"></span>\n\t\t);\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}