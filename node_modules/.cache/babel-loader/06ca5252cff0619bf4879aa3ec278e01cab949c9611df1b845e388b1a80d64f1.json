{"ast":null,"code":"const sleep = delay => new Promise(resolve => setTimeout(resolve, delay));\nconst prime = async () => {\n  await sleep(1000);\n  console.log(\"moar\");\n};\nfunction GetPrediction(model, sample) {\n  if (model == null) return -1;\n  if (sample == null) return -2;\n  prime();\n}\n_c = GetPrediction;\nconsole.log(\"Getting Prediction!\");\nprime();\nconsole.log(\"Done\");\nvar _c;\n$RefreshReg$(_c, \"GetPrediction\");","map":{"version":3,"names":["sleep","delay","Promise","resolve","setTimeout","prime","console","log","GetPrediction","model","sample"],"sources":["/home/ryan/Git/ForGUI/src/GetPrediction.js"],"sourcesContent":["const sleep = (delay) => new Promise ( (resolve) => setTimeout (resolve, delay));\nconst prime = async () => {\n\tawait sleep (1000);\n  console.log (\"moar\");\n}\nfunction GetPrediction (model, sample)\n{\n\tif (model == null)\n\t\treturn -1;\n\tif (sample == null)\n\t\treturn -2;\n\t\n\tprime ();\n}\n\nconsole.log (\"Getting Prediction!\");\nprime ();\nconsole.log (\"Done\");\n"],"mappings":"AAAA,MAAMA,KAAK,GAAIC,KAAK,IAAK,IAAIC,OAAO,CAAIC,OAAO,IAAKC,UAAU,CAAED,OAAO,EAAEF,KAAK,CAAC,CAAC;AAChF,MAAMI,KAAK,GAAG,YAAY;EACzB,MAAML,KAAK,CAAE,IAAI,CAAC;EACjBM,OAAO,CAACC,GAAG,CAAE,MAAM,CAAC;AACtB,CAAC;AACD,SAASC,aAAa,CAAEC,KAAK,EAAEC,MAAM,EACrC;EACC,IAAID,KAAK,IAAI,IAAI,EAChB,OAAO,CAAC,CAAC;EACV,IAAIC,MAAM,IAAI,IAAI,EACjB,OAAO,CAAC,CAAC;EAEVL,KAAK,EAAG;AACT;AAAC,KARQG,aAAa;AAUtBF,OAAO,CAACC,GAAG,CAAE,qBAAqB,CAAC;AACnCF,KAAK,EAAG;AACRC,OAAO,CAACC,GAAG,CAAE,MAAM,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}