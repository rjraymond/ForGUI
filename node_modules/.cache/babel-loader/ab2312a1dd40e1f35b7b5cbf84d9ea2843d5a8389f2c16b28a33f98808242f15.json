{"ast":null,"code":"function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\nfunction GetPrediction(model, sample) {\n  if (model == null) return -1;\n  if (sample == null) return -2;\n  setTimeout(() => {\n    console.log(\"...\");\n  }, 1000);\n}\n_c = GetPrediction;\nconsole.log(\"Getting Prediction!\");\nconsole.log(GetPrediction(1, 1));\nconsole.log(\"Done\");\nvar _c;\n$RefreshReg$(_c, \"GetPrediction\");","map":{"version":3,"names":["sleep","ms","Promise","resolve","setTimeout","GetPrediction","model","sample","console","log"],"sources":["/home/ryan/Git/ForGUI/src/GetPrediction.js"],"sourcesContent":["function sleep (ms) {\n\treturn new Promise (resolve => setTimeout (resolve, ms));\n}\nfunction GetPrediction (model, sample)\n{\n\tif (model == null)\n\t\treturn -1;\n\tif (sample == null)\n\t\treturn -2;\n\t\n\tsetTimeout ( () => {console.log (\"...\");}, 1000);\n}\n\nconsole.log (\"Getting Prediction!\");\nconsole.log (GetPrediction (1, 1));\nconsole.log (\"Done\");\n"],"mappings":"AAAA,SAASA,KAAK,CAAEC,EAAE,EAAE;EACnB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAIC,UAAU,CAAED,OAAO,EAAEF,EAAE,CAAC,CAAC;AACzD;AACA,SAASI,aAAa,CAAEC,KAAK,EAAEC,MAAM,EACrC;EACC,IAAID,KAAK,IAAI,IAAI,EAChB,OAAO,CAAC,CAAC;EACV,IAAIC,MAAM,IAAI,IAAI,EACjB,OAAO,CAAC,CAAC;EAEVH,UAAU,CAAG,MAAM;IAACI,OAAO,CAACC,GAAG,CAAE,KAAK,CAAC;EAAC,CAAC,EAAE,IAAI,CAAC;AACjD;AAAC,KARQJ,aAAa;AAUtBG,OAAO,CAACC,GAAG,CAAE,qBAAqB,CAAC;AACnCD,OAAO,CAACC,GAAG,CAAEJ,aAAa,CAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AAClCG,OAAO,CAACC,GAAG,CAAE,MAAM,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}