{"ast":null,"code":"var _jsxFileName = \"/home/ryan/Git/ForGUI/src/Application.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { GetModelList } from \"./GetModelList.js\";\nimport { GetPrediction } from \"./GetPrediction.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.Submit = event => {\n      event.preventDefault();\n      if (!this.state.sample) return;\n      this.setState({\n        prediction_in_progress: true\n      });\n      this.AsyncPrediction();\n    };\n    this.FileUpload = event => {\n      this.setState({\n        sample: event.target.files[0].name\n      });\n      /* Handle file-upload logic here. */\n    };\n    this.state = {};\n    this.state.models = GetModelList();\n    this.state.model = this.state.models[0];\n    this.state.sample = null;\n    this.state.prediction_in_progress = false;\n    this.state.prediction = -1;\n  }\n  async AsyncPrediction() {\n    let promise = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(GetPrediction(this.state.model, this.state.sample));\n      }, 1000);\n    });\n    let prediction = await promise;\n    this.setState({\n      prediction: prediction,\n      prediction_in_progress: false\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.Submit,\n        style: {\n          margin: \"auto\",\n          width: \"max-content\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"UploadSample\",\n            children: \" Upload Sample: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            onChange: this.FileUpload,\n            type: \"file\",\n            id: \"UploadSample\",\n            name: \"UploadSample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"SelectModel\",\n            children: \" Select Model: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"SelectModel\",\n            onChange: this.ModelChanged,\n            children: this.state.models.map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: name,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true), \");\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit (What Verb is Appropriate?)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.sample == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Please upload a sample \"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.model == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Please select a model \"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.prediction_in_progress ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Calculating... \"\n        }, void 0, false) : this.state.prediction >= 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" Finally got the async. Moving on to idle animations \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","ReactDOM","GetModelList","GetPrediction","Application","Component","constructor","props","Submit","event","preventDefault","state","sample","setState","prediction_in_progress","AsyncPrediction","FileUpload","target","files","name","models","model","prediction","promise","Promise","resolve","setTimeout","render","margin","width","ModelChanged","map","index"],"sources":["/home/ryan/Git/ForGUI/src/Application.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { GetModelList } from \"./GetModelList.js\";\nimport { GetPrediction } from \"./GetPrediction.js\";\n\nexport class Application extends React.Component {\n  constructor (props)\n\t{\n\t\tsuper (props);\n\t\tthis.state = {}\n\t\tthis.state.models = GetModelList ();\n\t\tthis.state.model = this.state.models[0];\n\t\tthis.state.sample = null;\n\t\tthis.state.prediction_in_progress = false;\n\t\tthis.state.prediction = -1;\n\t}\n\tasync AsyncPrediction ()\n\t{\n\t\tlet promise = new Promise ((resolve) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tresolve (GetPrediction (this.state.model, this.state.sample));\n\t\t\t\t}, 1000);\n\t\t\t});\n\t\tlet prediction = await promise;\n\t\tthis.setState ({prediction: prediction, prediction_in_progress: false});\n\t}\n\tSubmit = (event) => \n\t{\n\t\tevent.preventDefault ();\n\t\tif (!this.state.sample)\n\t\t\treturn;\n\t\tthis.setState ({prediction_in_progress: true});\n\t\tthis.AsyncPrediction ();\n\t}\n\tFileUpload = (event) => {\n\t\tthis.setState ({sample: event.target.files[0].name});\n\t\t/* Handle file-upload logic here. */\n\t}\n\trender () {\n    return (\n      <div>\n\t\t\t\t<form onSubmit = {this.Submit} style = {{margin: \"auto\", width: \"max-content\"}}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor = \"UploadSample\"> Upload Sample: </label>\n\t\t\t\t\t\t<input onChange = {this.FileUpload} type = \"file\" id = \"UploadSample\" name = \"UploadSample\"/>\n\t\t\t\t\t</div><>\n\t\t\t\t\t<label htmlFor = \"SelectModel\"> Select Model: </label>\n      \t\t<select id = \"SelectModel\" onChange = {this.ModelChanged}>\n      \t\t\t{this.state.models.map ((name, index) => (\n        \t\t\t<option value = {name} key = {index}>\n          \t{name}\n        \t\t</option>\n      \t\t\t))}\n      \t\t</select></>);\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type = \"submit\" value = \"Submit (What Verb is Appropriate?)\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div>\n\t\t\t\t{ this.state.sample == null ?\n\t\t\t\t\t<> Please upload a sample </> :\n\t\t\t\t\t<> </> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t{ this.state.model == null ?\n\t\t\t\t\t<> Please select a model </> :\n\t\t\t\t\t<> </> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t{\n\t\t\t\tthis.state.prediction_in_progress ?\n\t\t\t\t\t<> Calculating... </> :\n\t\t\t\t\t(this.state.prediction >= 0 ? <> </> : <> </>)\n\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t<p> Finally got the async. Moving on to idle animations </p>\n      </div>\n    );\n  }\n}\n\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,SAASC,YAAY,QAAQ,mBAAmB;AAChD,SAASC,aAAa,QAAQ,oBAAoB;AAAC;AAAA;AAEnD,OAAO,MAAMC,WAAW,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC/CC,WAAW,CAAEC,KAAK,EACnB;IACC,KAAK,CAAEA,KAAK,CAAC;IAAC,KAkBfC,MAAM,GAAIC,KAAK,IACf;MACCA,KAAK,CAACC,cAAc,EAAG;MACvB,IAAI,CAAC,IAAI,CAACC,KAAK,CAACC,MAAM,EACrB;MACD,IAAI,CAACC,QAAQ,CAAE;QAACC,sBAAsB,EAAE;MAAI,CAAC,CAAC;MAC9C,IAAI,CAACC,eAAe,EAAG;IACxB,CAAC;IAAA,KACDC,UAAU,GAAIP,KAAK,IAAK;MACvB,IAAI,CAACI,QAAQ,CAAE;QAACD,MAAM,EAAEH,KAAK,CAACQ,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC;MAAI,CAAC,CAAC;MACpD;IACD,CAAC;IA5BA,IAAI,CAACR,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACA,KAAK,CAACS,MAAM,GAAGlB,YAAY,EAAG;IACnC,IAAI,CAACS,KAAK,CAACU,KAAK,GAAG,IAAI,CAACV,KAAK,CAACS,MAAM,CAAC,CAAC,CAAC;IACvC,IAAI,CAACT,KAAK,CAACC,MAAM,GAAG,IAAI;IACxB,IAAI,CAACD,KAAK,CAACG,sBAAsB,GAAG,KAAK;IACzC,IAAI,CAACH,KAAK,CAACW,UAAU,GAAG,CAAC,CAAC;EAC3B;EACA,MAAMP,eAAe,GACrB;IACC,IAAIQ,OAAO,GAAG,IAAIC,OAAO,CAAGC,OAAO,IAAK;MACvCC,UAAU,CAAC,MAAM;QAChBD,OAAO,CAAEtB,aAAa,CAAE,IAAI,CAACQ,KAAK,CAACU,KAAK,EAAE,IAAI,CAACV,KAAK,CAACC,MAAM,CAAC,CAAC;MAC7D,CAAC,EAAE,IAAI,CAAC;IACT,CAAC,CAAC;IACH,IAAIU,UAAU,GAAG,MAAMC,OAAO;IAC9B,IAAI,CAACV,QAAQ,CAAE;MAACS,UAAU,EAAEA,UAAU;MAAER,sBAAsB,EAAE;IAAK,CAAC,CAAC;EACxE;EAaAa,MAAM,GAAI;IACP,oBACE;MAAA,wBACF;QAAM,QAAQ,EAAI,IAAI,CAACnB,MAAO;QAAC,KAAK,EAAI;UAACoB,MAAM,EAAE,MAAM;UAAEC,KAAK,EAAE;QAAa,CAAE;QAAA,wBAC9E;UAAA,wBACC;YAAO,OAAO,EAAG,cAAc;YAAA,UAAC;UAAgB;YAAA;YAAA;YAAA;UAAA,QAAQ,eACxD;YAAO,QAAQ,EAAI,IAAI,CAACb,UAAW;YAAC,IAAI,EAAG,MAAM;YAAC,EAAE,EAAG,cAAc;YAAC,IAAI,EAAG;UAAc;YAAA;YAAA;YAAA;UAAA,QAAE;QAAA;UAAA;UAAA;UAAA;QAAA,QACxF;UAAA,wBACN;YAAO,OAAO,EAAG,aAAa;YAAA,UAAC;UAAe;YAAA;YAAA;YAAA;UAAA,QAAQ,eACnD;YAAQ,EAAE,EAAG,aAAa;YAAC,QAAQ,EAAI,IAAI,CAACc,YAAa;YAAA,UACvD,IAAI,CAACnB,KAAK,CAACS,MAAM,CAACW,GAAG,CAAE,CAACZ,IAAI,EAAEa,KAAK,kBAClC;cAAQ,KAAK,EAAIb,IAAK;cAAA,UACrBA;YAAI,GADyBa,KAAK;cAAA;cAAA;cAAA;YAAA,QAGpC;UAAC;YAAA;YAAA;YAAA;UAAA,QACM;QAAA,gBAAG,MACf;UAAA,uBACC;YAAO,IAAI,EAAG,QAAQ;YAAC,KAAK,EAAG;UAAoC;YAAA;YAAA;YAAA;UAAA;QAAG;UAAA;UAAA;UAAA;QAAA,QACjE;MAAA;QAAA;QAAA;QAAA;MAAA,QACA,eACP;QAAA,UACE,IAAI,CAACrB,KAAK,CAACC,MAAM,IAAI,IAAI,gBAC1B;UAAA,UAAE;QAAwB,iBAAG,gBAC7B;UAAA,UAAE;QAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QACD,eACN;QAAA,UACE,IAAI,CAACD,KAAK,CAACU,KAAK,IAAI,IAAI,gBACzB;UAAA,UAAE;QAAuB,iBAAG,gBAC5B;UAAA,UAAE;QAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QACD,eACN;QAAA,UAEA,IAAI,CAACV,KAAK,CAACG,sBAAsB,gBAChC;UAAA,UAAE;QAAgB,iBAAG,GACpB,IAAI,CAACH,KAAK,CAACW,UAAU,IAAI,CAAC,gBAAG;UAAA,UAAE;QAAC,iBAAG,gBAAG;UAAA,UAAE;QAAC;MAAI;QAAA;QAAA;QAAA;MAAA,QAEzC,eACN;QAAA,UAAG;MAAqD;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACpD;EAEV;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}