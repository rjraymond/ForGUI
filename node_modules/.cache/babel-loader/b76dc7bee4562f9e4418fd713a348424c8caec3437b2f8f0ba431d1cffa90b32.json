{"ast":null,"code":"export async function GetPrediction(model, sample) {\n  if (model == null) return -1;\n  if (sample == null) return -2;\n  var get = new XMLHttpRequest();\n  get.open(\"GET\", \"http://localhost:8000/GetPrediction.php\", true);\n  let promise = new Promise(resolve => {\n    resolve(get.send());\n  });\n  return get.responseText;\n}\n_c = GetPrediction;\nvar _c;\n$RefreshReg$(_c, \"GetPrediction\");","map":{"version":3,"names":["GetPrediction","model","sample","get","XMLHttpRequest","open","promise","Promise","resolve","send","responseText"],"sources":["/home/ryan/Git/ForGUI/src/GetPrediction.js"],"sourcesContent":["export async function GetPrediction (model, sample)\n{\n\tif (model == null)\n\t\treturn -1;\n\tif (sample == null)\n\t\treturn -2;\n\tvar get = new XMLHttpRequest ();\n\tget.open (\"GET\", \"http://localhost:8000/GetPrediction.php\", true);\n\tlet promise = new Promise ((resolve) => {\n      resolve (get.send());\n      });\n\t\n\treturn get.responseText;\n}\n"],"mappings":"AAAA,OAAO,eAAeA,aAAa,CAAEC,KAAK,EAAEC,MAAM,EAClD;EACC,IAAID,KAAK,IAAI,IAAI,EAChB,OAAO,CAAC,CAAC;EACV,IAAIC,MAAM,IAAI,IAAI,EACjB,OAAO,CAAC,CAAC;EACV,IAAIC,GAAG,GAAG,IAAIC,cAAc,EAAG;EAC/BD,GAAG,CAACE,IAAI,CAAE,KAAK,EAAE,yCAAyC,EAAE,IAAI,CAAC;EACjE,IAAIC,OAAO,GAAG,IAAIC,OAAO,CAAGC,OAAO,IAAK;IACnCA,OAAO,CAAEL,GAAG,CAACM,IAAI,EAAE,CAAC;EACpB,CAAC,CAAC;EAEP,OAAON,GAAG,CAACO,YAAY;AACxB;AAAC,KAbqBV,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}