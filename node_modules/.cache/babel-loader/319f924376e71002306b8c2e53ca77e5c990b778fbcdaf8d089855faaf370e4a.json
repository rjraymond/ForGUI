{"ast":null,"code":"this.sleep = milliseconds => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds));\n};\nexport function GetPrediction(model, sample) {\n  if (model == null) return -1;\n  if (sample == null) return -2;\n  sleep(0).then(r => {\n    return Math.round(Math.random() * 100) / 100;\n  });\n}\n_c = GetPrediction;\nvar _c;\n$RefreshReg$(_c, \"GetPrediction\");","map":{"version":3,"names":["sleep","milliseconds","Promise","resolve","setTimeout","GetPrediction","model","sample","then","r","Math","round","random"],"sources":["/home/ryan/Git/ForGUI/src/GetPrediction.js"],"sourcesContent":["this.sleep = (milliseconds) => {\n  return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\nexport function GetPrediction (model, sample)\n{\n\tif (model == null)\n\t\treturn -1;\n\tif (sample == null)\n\t\treturn -2;\n\tsleep (0).then (r =>\n\t{\n\t\treturn Math.round (Math.random() * 100) / 100;\n\t});\n}\n\n"],"mappings":"AAAA,IAAI,CAACA,KAAK,GAAIC,YAAY,IAAK;EAC7B,OAAO,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,YAAY,CAAC,CAAC;AAClE,CAAC;AACD,OAAO,SAASI,aAAa,CAAEC,KAAK,EAAEC,MAAM,EAC5C;EACC,IAAID,KAAK,IAAI,IAAI,EAChB,OAAO,CAAC,CAAC;EACV,IAAIC,MAAM,IAAI,IAAI,EACjB,OAAO,CAAC,CAAC;EACVP,KAAK,CAAE,CAAC,CAAC,CAACQ,IAAI,CAAEC,CAAC,IACjB;IACC,OAAOC,IAAI,CAACC,KAAK,CAAED,IAAI,CAACE,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,GAAG;EAC9C,CAAC,CAAC;AACH;AAAC,KAVeP,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}