{"ast":null,"code":"var _jsxFileName = \"/home/ryan/Git/ForGUI/src/Application.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { GetModelList } from \"./GetModelList.js\";\nimport { GetPrediction } from \"./GetPrediction.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport class Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.Submit = event => {\n      event.preventDefault();\n      this.setState({\n        prediction: GetPrediction(this.state.model, this.state.sample)\n      });\n    };\n    this.state = {};\n    this.state.models = GetModelList();\n    this.state.model = this.state.models[0];\n    this.state.sample = null;\n    this.state.prediction = -1;\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.Submit,\n        style: {\n          margin: \"auto\",\n          width: \"max-content\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"UploadSample\",\n            children: \" Upload Sample: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"UploadSample\",\n            name: \"UploadSample\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"SelectModel\",\n            children: \" Select Model: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"SelectModel\",\n            onChange: this.ModelChanged,\n            children: this.state.models.map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: name,\n              children: name\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 12\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true), \");\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit (What Verb is Appropriate?)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.sample == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Please upload a sample \"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.model == null ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" Please select a model \"\n        }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.prediction >= 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\" Your prediction: \", this.state.prediction, \" \"]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: \" \"\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          margin: \"auto\",\n          width: \"max-content\"\n        },\n        children: [\"ToDo:\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Passing state to child (result needs state) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Dummy function pretend to call models \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Tie to python instead of server commandline? \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Handle server output \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass SelectModel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ModelChanged = event => {\n      this.setState({\n        model: event.target.value\n      });\n    };\n    this.state = {};\n    this.state.models = GetModelList();\n    this.state.model = this.state.models[0];\n  }\n  /*\tI want to be able to update this thing if it ever changes.\t*/\n  /*\tWhere should I get this prop? Maybe it's not important right now.\t*/\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"SelectModel\",\n        children: \" Select Model: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"SelectModel\",\n        onChange: this.ModelChanged,\n        children: this.state.models.map((name, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: name,\n          children: name\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true);\n  }\n}","map":{"version":3,"names":["React","ReactDOM","GetModelList","GetPrediction","Application","Component","constructor","props","Submit","event","preventDefault","setState","prediction","state","model","sample","models","render","margin","width","ModelChanged","map","name","index","SelectModel","target","value"],"sources":["/home/ryan/Git/ForGUI/src/Application.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport { GetModelList } from \"./GetModelList.js\";\nimport { GetPrediction } from \"./GetPrediction.js\";\n\nexport class Application extends React.Component {\n  constructor (props)\n\t{\n\t\tsuper (props);\n\t\tthis.state = {}\n\t\tthis.state.models = GetModelList ();\n\t\tthis.state.model = this.state.models[0];\n\t\tthis.state.sample = null;\n\t\tthis.state.prediction = -1;\n\t}\n\tSubmit = (event) => \n\t{\n\t\tevent.preventDefault ();\n\t\tthis.setState ({prediction: GetPrediction (this.state.model, this.state.sample)});\n\t}\n\trender () {\n    return (\n      <div>\n\t\t\t\t<form onSubmit = {this.Submit} style = {{margin: \"auto\", width: \"max-content\"}}>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<label htmlFor = \"UploadSample\"> Upload Sample: </label>\n\t\t\t\t\t\t<input type = \"file\" id = \"UploadSample\" name = \"UploadSample\"/>\n\t\t\t\t\t</div><>\n\t\t\t\t\t<label htmlFor = \"SelectModel\"> Select Model: </label>\n      \t\t<select id = \"SelectModel\" onChange = {this.ModelChanged}>\n      \t\t\t{this.state.models.map ((name, index) => (\n        \t\t\t<option value = {name} key = {index}>\n          \t{name}\n        \t\t</option>\n      \t\t\t))}\n      \t\t</select></>);\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input type = \"submit\" value = \"Submit (What Verb is Appropriate?)\" />\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div>\n\t\t\t\t{ this.state.sample == null ?\n\t\t\t\t\t<> Please upload a sample </> :\n\t\t\t\t\t<> </> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t{ this.state.model == null ?\n\t\t\t\t\t<> Please select a model </> :\n\t\t\t\t\t<> </> }\n\t\t\t\t</div>\n\t\t\t\t<div>\n        { this.state.prediction >= 0 ?\n\t\t\t\t\t<> Your prediction: {this.state.prediction} </> :\n\t\t\t\t\t<> </> }\n\t\t\t\t</div>\n\t\t\t\t<div style = {{margin: \"auto\", width: \"max-content\"}}>\n          ToDo:\n          <p> Passing state to child (result needs state) </p>\n\t\t\t\t\t<p> Dummy function pretend to call models </p>\n\t\t\t\t\t<p> Tie to python instead of server commandline? </p>\n          <p> Handle server output </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SelectModel extends React.Component {\n\tconstructor (props) {\n\t\tsuper (props);\n\t\tthis.state = {};\n\t\tthis.state.models = GetModelList ();\n\t\tthis.state.model = this.state.models[0];\n\t\t}\n\t/*\tI want to be able to update this thing if it ever changes.\t*/\n\t/*\tWhere should I get this prop? Maybe it's not important right now.\t*/\n\tModelChanged = (event) =>\n\t{\n\t\tthis.setState ({model: event.target.value});\n\t}\n\trender () {\n\t\treturn (<>\n\t\t\t<label htmlFor = \"SelectModel\"> Select Model: </label>\n\t\t\t<select id = \"SelectModel\" onChange = {this.ModelChanged}>\n\t\t\t{this.state.models.map ((name, index) => (\n\t\t\t\t<option value = {name} key = {index}>\n\t\t\t\t\t{name}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t\t</select>\n\t\t</>);\n\t}\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}